<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsmscp.dr.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.jsmscp.dr.entity.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, nick_name, password, role_id, status, is_deleted, create_at, update_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jsmscp.dr.entity.SysUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user (id, user_name, nick_name,
    password, role_id, status,
    is_deleted, create_at, update_at
    )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT},
    #{isDeleted,jdbcType=TINYINT}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.jsmscp.dr.entity.SysUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsmscp.dr.entity.SysUser">
    update sys_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsmscp.dr.entity.SysUser">
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="list" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
FROM
	sys_user
	<where>
      <if test="keyword != null">
        <bind name="keywords" value="'%' + keyword + '%'" />
        (user_name LIKE #{keywords} OR nick_name LIKE #{keywords})
      </if>
      <if test="roleId != null">
        AND role_id = #{roleId}
      </if>
      <if test="status != null">
        AND status = #{status}
      </if>
      AND is_deleted = #{isDeleted}
    </where>
      ORDER BY id
      LIMIT ${pageNo},${pageSize}
  </select>

  <select id="findCount" resultType="java.lang.Integer">
    SELECT
    count(*)
    FROM
    sys_user
    <where>
      <if test="keyword != null">
        <bind name="keywords" value="'%' + keyword + '%'" />
        (user_name LIKE #{keywords} OR nick_name LIKE #{keywords})
      </if>
      <if test="roleId != null">
        AND role_id = #{roleId}
      </if>
      <if test="status != null">
        AND status = #{status}
      </if>
      AND is_deleted = #{isDeleted}
    </where>
  </select>

  <select id="findUserWithoutDeleted" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where user_name = #{userName,jdbcType=VARCHAR} and is_deleted = #{isDeleted,jdbcType=TINYINT}
  </select>


  <select id="findMenuByUserId" resultType="com.jsmscp.dr.entity.SysMenu">
    SELECT
    m.`name`, m.num, m.parent_id, m.icon, m.url, m.`code`, m.id
    FROM
    sys_role_user_relation r
    JOIN sys_role_menu_relation rm ON r.role_id = rm.role_id
    JOIN sys_menu m ON rm.menu_id = m.id
    WHERE
    r.user_id = #{id} AND m.is_deleted = #{isDeleted}
    order by m.num asc
  </select>

  <select id="findAllRoles" resultType="string">
    <bind name="MENU_TYPE_MENU" value="@com.jsmscp.dr.constant.Constant@MENU_TYPE_MENU"/>
    <bind name="MENU_TYPE_OPERATION" value="@com.jsmscp.dr.constant.Constant@MENU_TYPE_OPERATION"/>
    select sm.code from sys_menu sm
    join sys_role_menu_relation srmr on srmr.menu_id=sm.id
    join sys_role_user_relation srur on srur.role_id=srmr.role_id
    where srur.user_id=#{userId} and srmr.menu_type=#{MENU_TYPE_MENU}
    union
    select concat(sm.code,':',smo.code) from sys_menu_operation smo
    join sys_menu sm on sm.id=smo.menu_id
    join sys_role_menu_relation srmr on srmr.menu_id=smo.id
    join sys_role_user_relation srur on srur.role_id=srmr.role_id
    where srur.user_id=#{userId} and srmr.menu_type=#{MENU_TYPE_OPERATION}
  </select>
  <select id="findByUserName" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from sys_user
    where user_name = #{userName}
  </select>
</mapper>